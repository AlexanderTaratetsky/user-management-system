name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ums_auth
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
      mongo:
        image: mongo:7
        ports: ["27017:27017"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Backend deps
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ums_auth?schema=public
          MONGODB_URI: mongodb://localhost:27017/ums_ci
          JWT_SECRET: ci
          ADMIN_INVITE_SECRET: ci-secret
        run: |
          npm ci
          npx prisma generate
          npx prisma migrate deploy
      - name: Backend tests
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ums_auth?schema=public
          MONGODB_URI: mongodb://localhost:27017/ums_ci
          JWT_SECRET: ci
        run: npm test

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Frontend deps & build
        working-directory: frontend
        run: |
          npm ci
          npm run build
